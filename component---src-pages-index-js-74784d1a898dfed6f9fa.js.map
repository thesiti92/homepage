{"version":3,"sources":["webpack:///./src/components/consts.js","webpack:///./src/components/timeline/TimelineItem.jsx","webpack:///./src/components/timeline/Timeline.jsx","webpack:///./src/components/intro/Intro.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.jsx"],"names":["colors","styles","ItemHeader","styled","h3","withConfig","displayName","componentId","TimelineItemWrapper","div","FeatList","ul","_ref","visible","css","Brief","p","_ref2","Feat","li","TimelineItem","_ref3","position","org","feats","brief","_useState","useState","showDetails","toggleDetails","react_default","a","createElement","onClick","map","feat","key","TimelineWrapper","OFF_SCREEN_POS","window","innerWidth","slideIn","keyframes","HelperText","h4","StyledGoInfo","GoInfo","Timeline","edges","_941514829","data","allTimelineJson","node","timeline_TimelineItem","IntroWrapper","Headshot","Img","TextWrapper","Tagline","Name","h1","Intro","headshot","_3994493830","file","childImageSharp","fixed","TimelineHeader","IndexPage","seo","title","layout","intro_Intro","timeline_Timeline","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","LayoutWrapper","Footer","footer","Layout","Fragment","Date","getFullYear","href","_755544856"],"mappings":"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","file":"component---src-pages-index-js-74784d1a898dfed6f9fa.js","sourcesContent":["const colors = {\n  greyBackground: \"#e0e0e0\",\n  secondaryText: \"#455a64\",\n}\n\nconst styles = {\n  boxShadow: \"0px 0px 16px 2px rgba(51, 51, 51, 0.48)\",\n  softBoxShadow: \"0px 0px 16px 2px rgba(51,51,51,0.38)\",\n}\n\nexport { colors, styles }\n","import React, { useState } from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { colors, styles } from \"../consts\"\n\nconst ItemHeader = styled.h3`\n  white-space: nowrap;\n  margin-bottom: 3%;\n`\n\nconst TimelineItemWrapper = styled.div`\n  background-color: ${colors.greyBackground};\n  width: 500px;\n  grid-row: span 2;\n  align-content: middle;\n  border-radius: 10px;\n  margin: 14px 0;\n  padding: 12px 14px;\n  box-shadow: ${styles.boxShadow};\n\n  :nth-child(odd) {\n    justify-self: flex-end;\n  }\n  ::before {\n    content: \"\";\n    position: absolute;\n    display: inline-block;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    left: calc(50% - 16px);\n    box-shadow: ${styles.softBoxShadow};\n    transform: translateY(calc(50% + 16px + 7px));\n    background-color: #4a148c;\n  }\n`\nconst SWAP_TIME = \"0.4s\"\n\nconst FeatList = styled.ul`\n  overflow: hidden;\n  margin: 0;\n  transition: max-height ${SWAP_TIME}, visibility ${SWAP_TIME},\n    opacity ${SWAP_TIME};\n  ${({ visible }) =>\n    visible\n      ? css`\n          max-height: 500px;\n          visibility: visible;\n          opacity: 1;\n        `\n      : css`\n          max-height: 0px;\n          visibility: hidden;\n          opacity: 0;\n        `}\n`\nconst Brief = styled.p`\n  transition: visibility ${SWAP_TIME}, opacity ${SWAP_TIME},\n    max-height ${SWAP_TIME};\n  margin: 0;\n  overflow: hidden;\n  ${({ visible }) =>\n    visible\n      ? css`\n          visibility: visible;\n          opacity: 1;\n          max-height: 100px;\n        `\n      : css`\n          visibility: hidden;\n          opacity: 0;\n          max-height: 0px;\n        `}\n`\nconst Feat = styled.li``\n\nfunction TimelineItem({ position, org, feats, brief }) {\n  const [showDetails, toggleDetails] = useState(false)\n  return (\n    <TimelineItemWrapper onClick={() => toggleDetails(!showDetails)}>\n      <ItemHeader>{`${position} @ ${org}`}</ItemHeader>\n      <Brief visible={!showDetails}>{brief}</Brief>\n      <FeatList visible={showDetails}>\n        {feats.map(feat => (\n          <Feat key={feat}>{feat}</Feat>\n        ))}\n      </FeatList>\n    </TimelineItemWrapper>\n  )\n}\n\nexport default TimelineItem\n","import React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport TimelineItem from \"./TimelineItem\"\nimport { GoInfo } from \"react-icons/go\"\nimport { colors, styles } from \"../consts\"\n\nconst TimelineWrapper = styled.div`\n  display: grid;\n  position: relative;\n  grid-template-columns: 1fr;\n  align-items: center;\n  width: 1200px;\n  margin: auto;\n  ::before {\n    content: \"\";\n    background: #455a64;\n    width: 5px;\n    top: 0;\n    bottom: 0;\n    position: absolute;\n    left: 50%;\n    border-radius: 6px;\n    transform: translateX(-50%);\n  }\n`\n\nconst OFF_SCREEN_POS =\n  typeof window === \"undefined\" ? `-${window.innerWidth / 3}px` : \"-600px\"\n\nconst slideIn = keyframes`\n\n  0% {\n    right: ${OFF_SCREEN_POS};\n  }\n  10% {\n    right: 0;\n  }\n  90% {\n    right: 0;\n  }\n  100% {\n    right: ${OFF_SCREEN_POS};\n  }\n`\nconst HelperText = styled.h4`\n  position: absolute;\n  top: 6%;\n  right: ${OFF_SCREEN_POS};\n  color: #546e7a;\n  align-items: center;\n  display: flex;\n  font-size: 1.2rem;\n  background-color: ${colors.greyBackground};\n  padding: 6px;\n  border-radius: 6px;\n  animation: ${slideIn} 6s ease-out 10s;\n  animation-fill-mode: forwards;\n  box-shadow: ${styles.softBoxShadow};\n`\n\nconst StyledGoInfo = styled(GoInfo)`\n  margin-right: 0.3rem;\n`\n\nfunction Timeline() {\n  const {\n    allTimelineJson: { edges },\n  } = useStaticQuery(\n    graphql`\n      query {\n        allTimelineJson {\n          edges {\n            node {\n              org\n              position\n              feats\n              brief\n            }\n          }\n        }\n      }\n    `\n  )\n  return (\n    <TimelineWrapper>\n      <HelperText>\n        <StyledGoInfo />\n        Click an item for more info!\n      </HelperText>\n      {edges.map(({ node }) => (\n        <TimelineItem {...node} />\n      ))}\n    </TimelineWrapper>\n  )\n}\n\nexport default Timeline\n","import React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { styles, colors } from \"../consts\"\n\nconst IntroWrapper = styled.div`\n  padding: 6% 10%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst Headshot = styled(Img)`\n  border-radius: 50%;\n  box-shadow: ${styles.softBoxShadow};\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  padding: 20px;\n  width: 50%;\n  margin-left: 6%;\n`\n\nconst Tagline = styled.div`\n  font-size: 2rem;\n  color: ${colors.secondaryText};\n`\nconst Name = styled.h1`\n  font-size: 3.2rem;\n`\n\nfunction Intro() {\n  const {\n    file: { childImageSharp: headshot },\n  } = useStaticQuery(graphql`\n    query {\n      file(relativePath: { eq: \"headshot.jpg\" }) {\n        childImageSharp {\n          # Specify the image processing specifications right in the query.\n          # Makes it trivial to update as your page's design changes.\n          fixed(width: 220, height: 220) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  `)\n  return (\n    <IntroWrapper>\n      <Headshot fixed={headshot.fixed} />\n      <TextWrapper>\n        <Name>Alex Iansiti</Name>\n        <Tagline>\n          Just your average quarter Japanese male who likes to code, cook, and\n          speak Italian.\n        </Tagline>\n      </TextWrapper>\n    </IntroWrapper>\n  )\n}\n\nexport default Intro\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Timeline from \"../components/timeline/Timeline\"\nimport Intro from \"../components/intro/Intro\"\nimport styled from \"styled-components\"\n\nconst TimelineHeader = styled.h1`\n  text-align: center;\n`\n\nconst IndexPage = () => (\n  <SEO title=\"Home\" />,\n  (\n    <Layout>\n      <Intro />\n      <TimelineHeader>Here's All the Stuff I've Done!</TimelineHeader>\n      <Timeline />\n    </Layout>\n  )\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst LayoutWrapper = styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 4% 6%;\n`\n\nconst Footer = styled.footer`\n  margin-top: 5%;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n        <LayoutWrapper>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </Footer>\n        </LayoutWrapper>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}